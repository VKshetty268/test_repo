/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package hr_ui;

import hrmodel.HRData;
import hrmodel.HRRecords;
import java.awt.Image;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author varun
 */
public class HrViewjPanel extends javax.swing.JPanel {

    /**
     * Creates new form HrViewjPanel
     */
    
    HRRecords records;
       String fileName;
    byte[] picture;
    
    public HrViewjPanel(HRRecords records) {
        this.records = records;
        initComponents();
        
        populateTable();
        
        txtName.setText("");
        txtEmp.setText("");
        txtAge.setText("");
        txtStart.setText("");
        txtTeam.setText("");
        txtCell.setText("");
        txtEmail.setText("");
        lblPicture.setIcon(null);
        
    }
    
    
    private void populateTable(){
        
       DefaultTableModel tabModel = (DefaultTableModel) tblRecords.getModel();
       tabModel.setRowCount(0);
       
       for(HRData record:records.getRecords()){
       
       Object[] field = new Object[11];
       field[0]  = record;
       field[1]  = record.getEmp_id();
       field[2]  = record.getAge();
       field[3]  = record.getGender();
       field[4]  = record.getStart_date();
       field[5]  = record.getLevel();
       field[6]  = record.getTeam_info();
       field[7]  = record.getTitle();
       field[8]  = record.getPhone();
       field[9]  = record.getEmail();
       
       tabModel.addRow(field);
       
       
       }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label_main = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblGender = new javax.swing.JLabel();
        txtCell = new javax.swing.JTextField();
        lblStartDate = new javax.swing.JLabel();
        lblLevel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtTeam = new javax.swing.JTextArea();
        lblTeamInfo = new javax.swing.JLabel();
        txtEmp = new javax.swing.JTextField();
        lblPositionTitle = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        lblCellPhone = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        txtStart = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        lblID = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblRecords = new javax.swing.JTable();
        btnView = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        lblphoto = new javax.swing.JLabel();
        lblPicture = new javax.swing.JLabel();
        btnPicture = new javax.swing.JButton();
        drpSearch = new javax.swing.JComboBox<>();
        btmSearch = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        txtLevel = new javax.swing.JComboBox<>();
        txtGender = new javax.swing.JComboBox<>();
        txtPosition = new javax.swing.JComboBox<>();

        setAutoscrolls(true);

        label_main.setFont(new java.awt.Font("Ebrima", 0, 24)); // NOI18N
        label_main.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_main.setText("View Employee Record");

        lblAge.setText("Age:");

        lblGender.setText("Gender:");

        lblStartDate.setText("Start Date:");

        lblLevel.setText("Level:");

        txtTeam.setColumns(20);
        txtTeam.setRows(5);
        jScrollPane1.setViewportView(txtTeam);

        lblTeamInfo.setText("Team Info:");

        lblPositionTitle.setText("Position Title:");

        lblCellPhone.setText("Cell Phone:");

        lblEmail.setText("Email Address:");

        lblName.setText("Name:");

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        lblID.setText("Employee ID:");

        tblRecords.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Employee ID", "Age", "Gender", "Start Date", "Level", "Team Info", "Position Title", "Cell Phone", "Email Address"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblRecords);

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        lblphoto.setText("Picture:");

        btnPicture.setText("Change Picture");
        btnPicture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPictureActionPerformed(evt);
            }
        });

        drpSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Name", "ID", "Gender" }));
        drpSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drpSearchActionPerformed(evt);
            }
        });

        btmSearch.setText("Search");
        btmSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btmSearchActionPerformed(evt);
            }
        });

        txtLevel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Level 1", "Level 2", "Level 3", "Level 4", "Level 5" }));

        txtGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Others" }));

        txtPosition.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Software Developer", "Senior Software Developer", "Manager", "Team Lead", "Accountant", "Senior Accountant", "Testing Engineer", "Consultant", "Senior Consultant" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblID)
                    .addComponent(lblName)
                    .addComponent(lblGender)
                    .addComponent(lblTeamInfo)
                    .addComponent(lblStartDate)
                    .addComponent(lblAge)
                    .addComponent(btnView))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                            .addComponent(txtEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtGender, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtStart, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(lblLevel)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addComponent(btnDelete)
                                .addGap(18, 18, 18)
                                .addComponent(btnUpdate)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(236, 236, 236)
                        .addComponent(btmSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(352, 352, 352)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblphoto)
                            .addComponent(btnPicture)
                            .addComponent(drpSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPositionTitle)
                            .addComponent(lblCellPhone))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCell, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblEmail)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)))
                .addContainerGap(101, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(label_main, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 587, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtAge, txtEmp, txtName, txtStart});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtCell, txtEmail, txtSearch});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label_main, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnView)
                    .addComponent(btnDelete)
                    .addComponent(btnUpdate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblName)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblLevel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtLevel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblID)
                            .addComponent(txtEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPositionTitle)
                            .addComponent(txtPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblGender)
                            .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblStartDate)
                            .addComponent(lblphoto)
                            .addComponent(txtStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPicture)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTeamInfo)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(drpSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblAge)
                                        .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblCellPhone)
                                        .addComponent(txtCell, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(15, 15, 15)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                                .addComponent(lblPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btmSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        
        
        int selectedRowIndex = tblRecords.getSelectedRow();
        
        if (selectedRowIndex < 0) {
            
            JOptionPane.showMessageDialog(this, "Please select a Row before deleting");
            return;
            
        }
        
        DefaultTableModel tabModel = (DefaultTableModel) tblRecords.getModel();
       HRData selectedRecord = (HRData)tabModel.getValueAt(selectedRowIndex, 0);
        
        records.deleteRecord(selectedRecord);
        
        JOptionPane.showMessageDialog(this, "The Record was Deleted");
        
        populateTable();
        
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
 
        
        int selectedRowIndex = tblRecords.getSelectedRow();
        
        if (selectedRowIndex < 0) {
            
            JOptionPane.showMessageDialog(this, "Please select a Row before deleting");
            return;
            
        }
        
        DefaultTableModel tabModel = (DefaultTableModel) tblRecords.getModel();
       HRData selectedRecord = (HRData)tabModel.getValueAt(selectedRowIndex, 0);
       
       txtName.setText(selectedRecord.getName());
       txtEmp.setText(selectedRecord.getEmp_id());
       txtAge.setText(String.valueOf(selectedRecord.getAge()));
       txtGender.setSelectedItem(selectedRecord.getGender());
       txtStart.setText(String.valueOf(selectedRecord.getStart_date())) ;
       txtLevel.setSelectedItem(selectedRecord.getLevel());
       txtTeam.setText(selectedRecord.getTeam_info());
       txtPosition.setSelectedItem(selectedRecord.getTitle());
       txtCell.setText(selectedRecord.getPhone());
       txtEmail.setText(selectedRecord.getEmail());
        
       byte[] viewPicture = selectedRecord.getImage();
       ImageIcon imageIcon = new ImageIcon(new ImageIcon(viewPicture).getImage().getScaledInstance(lblPicture.getWidth(), lblPicture.getHeight(),Image.SCALE_SMOOTH));
        lblPicture.setIcon(imageIcon);
        
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        
       Boolean errorIndicator = true;
        
        if(txtName.getText()== ""  || 
           txtEmp.getText()==""    ||
           txtAge.getText()== ""  || 
           txtStart.getText()== ""  ||   
           txtTeam.getText()== ""  || 
           txtCell.getText()== ""  || 
           txtEmail.getText()==""  )
        {
        
        JOptionPane.showMessageDialog(this, "Please Fill all the Details");
        errorIndicator = false;
        
        }
        
        
        if ( !txtName.getText().matches("[a-zA-Z]+")) {
            
        JOptionPane.showMessageDialog(this, "Only Alphabets allowed in Name");
        errorIndicator = false;
            
        }
        
        
                if (txtCell.getText().length() > 10 ||
             !txtCell.getText().matches("[0-9]+") ||  txtCell.getText().length() < 10) {
            
        JOptionPane.showMessageDialog(this, "Invalid Phone Number");
        errorIndicator = false;
            
        }
        
                
        if (txtEmp.getText().length() > 10 ) {
            
        JOptionPane.showMessageDialog(this, "Employee ID can only be 10 digits long");
        errorIndicator = false;
            
        }

        
        
        
        if(errorIndicator == true){
        String name = txtName.getText();
        String emp = txtEmp.getText();
        int age = Integer.parseInt(txtAge.getText()) ;
        String gender = String.valueOf(txtGender.getSelectedItem());;
        String date =  txtStart.getText() ;              
        Date date1 = null;
            try {
                date1 = new SimpleDateFormat("dd/MM/yy").parse(date);
            } catch (ParseException ex) {
                Logger.getLogger(HrCreatePanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        String level = String.valueOf(txtLevel.getSelectedItem());
        String teamInfo = txtTeam.getText();
        String position = String.valueOf(txtPosition.getSelectedItem());
        String cell = txtCell.getText();
        String email = txtEmail.getText();
        
        
        int selectedRowIndex = tblRecords.getSelectedRow();
        
        
        
        
        if (selectedRowIndex >= 0) {
            
       DefaultTableModel tabModel = (DefaultTableModel) tblRecords.getModel();
       HRData selectedRecord = (HRData)tabModel.getValueAt(selectedRowIndex, 0);
        
        records.deleteRecord(selectedRecord);
                
        HRData singleRecord = records.addNewRecord();
        
        singleRecord.setName(name);
        singleRecord.setEmp_id(emp);
        singleRecord.setAge(age);
        singleRecord.setGender(gender);
        singleRecord.setStart_date(date1);
        singleRecord.setLevel(level);
        singleRecord.setTeam_info(teamInfo);
        singleRecord.setTitle(position);
        singleRecord.setPhone(cell);
        singleRecord.setEmail(email);
        singleRecord.setFilename(fileName);
        singleRecord.setImage(picture);
        
        JOptionPane.showMessageDialog(this,"HR Record was Updated");
        
        txtName.setText("");
        txtEmp.setText("");
        txtAge.setText("");
        txtStart.setText("");
        txtTeam.setText("");
        txtCell.setText("");
        txtEmail.setText("");
        lblPicture.setIcon(null);
        
        populateTable();
        }
    }
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnPictureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPictureActionPerformed
       
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        fileName = f.getAbsolutePath();
        ImageIcon imageIcon = new ImageIcon(new ImageIcon(fileName).getImage().getScaledInstance(lblPicture.getWidth(), lblPicture.getHeight(),Image.SCALE_SMOOTH));
        lblPicture.setIcon(imageIcon);
        
        try{
            
            File image =  new File(fileName);
            FileInputStream fileStream = new FileInputStream(image);
            ByteArrayOutputStream byteStream = new ByteArrayOutputStream();
            byte[] buffer = new byte[1024];
            for(int reader; (reader = fileStream.read(buffer)) !=-1;){
            
            byteStream.write(buffer,0,reader);
            
        }
            
            picture = byteStream.toByteArray();
            
            
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        
    }//GEN-LAST:event_btnPictureActionPerformed
    
    
    private void drpSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drpSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_drpSearchActionPerformed

    private void btmSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btmSearchActionPerformed
        
       String searchItem  =  String.valueOf(drpSearch.getSelectedItem());
       
       if (searchItem == "Name" && txtSearch.getText()!= ""){
           
           
           
       DefaultTableModel tabModel = (DefaultTableModel) tblRecords.getModel();
       tabModel.setRowCount(0);
       
       for(HRData record:records.getRecords()){
       
           String newName = record.getName();
           String searchName = txtSearch.getText();
           
       if(newName.equals(searchName)){
       Object[] field = new Object[11];
       field[0]  = record;
       field[1]  = record.getEmp_id();
       field[2]  = record.getAge();
       field[3]  = record.getGender();
       field[4]  = record.getStart_date();
       field[5]  = record.getLevel();
       field[6]  = record.getTeam_info();
       field[7]  = record.getTitle();
       field[8]  = record.getPhone();
       field[9]  = record.getEmail();
       
       tabModel.addRow(field);
       }
       
       }
           
       }
       
              if (searchItem == "ID"  && txtSearch.getText()!= ""){           
       DefaultTableModel tabModel = (DefaultTableModel) tblRecords.getModel();
       tabModel.setRowCount(0);
       
       for(HRData record:records.getRecords()){
       
           String newID = record.getEmp_id();
           String searchName = txtSearch.getText();
           
       if(newID.equals(searchName)){
       Object[] field = new Object[11];
       field[0]  = record;
       field[1]  = record.getEmp_id();
       field[2]  = record.getAge();
       field[3]  = record.getGender();
       field[4]  = record.getStart_date();
       field[5]  = record.getLevel();
       field[6]  = record.getTeam_info();
       field[7]  = record.getTitle();
       field[8]  = record.getPhone();
       field[9]  = record.getEmail();
       
       tabModel.addRow(field);
       }
       
       }
           
       }
       
               if (searchItem == "Gender"  && txtSearch.getText()!= ""){
           
                 
       DefaultTableModel tabModel = (DefaultTableModel) tblRecords.getModel();
       tabModel.setRowCount(0);
       
       for(HRData record:records.getRecords()){
       
           String newGender = record.getGender();
           String searchName = txtSearch.getText();
           
       if(newGender.equals(searchName)){
       Object[] field = new Object[11];
       field[0]  = record;
       field[1]  = record.getEmp_id();
       field[2]  = record.getAge();
       field[3]  = record.getGender();
       field[4]  = record.getStart_date();
       field[5]  = record.getLevel();
       field[6]  = record.getTeam_info();
       field[7]  = record.getTitle();
       field[8]  = record.getPhone();
       field[9]  = record.getEmail();
       
       tabModel.addRow(field);
       }
       
       }
           
       }
        
        

        
    }//GEN-LAST:event_btmSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btmSearch;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnPicture;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JComboBox<String> drpSearch;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel label_main;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblCellPhone;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblLevel;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPicture;
    private javax.swing.JLabel lblPositionTitle;
    private javax.swing.JLabel lblStartDate;
    private javax.swing.JLabel lblTeamInfo;
    private javax.swing.JLabel lblphoto;
    private javax.swing.JTable tblRecords;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtCell;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEmp;
    private javax.swing.JComboBox<String> txtGender;
    private javax.swing.JComboBox<String> txtLevel;
    private javax.swing.JTextField txtName;
    private javax.swing.JComboBox<String> txtPosition;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtStart;
    private javax.swing.JTextArea txtTeam;
    // End of variables declaration//GEN-END:variables
}
